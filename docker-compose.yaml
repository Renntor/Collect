version: '3.8'

services:
  db_dev:
    image: postgres:17
    env_file: .env
    volumes:
      - pg-data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres']
      interval: 2s
      timeout: 2s
      retries: 2
    ports:
      - '5433:5432'
    command: ['postgres', '-c', 'jit=off']

  redis_local:
    image: redis:7-alpine
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 2s
      timeout: 2s
      retries: 10

  backend_local:
    build:
      context: .
      dockerfile: docker/Dockerfile
    env_file: .env
    depends_on:
      db_dev:
        condition: service_healthy
    volumes:
      - static:/static
      - media:/app/media
    ports:
      - "8000:8000"

  celery_worker:
    build:
      context: .
      dockerfile: docker/Dockerfile
    env_file: .env
    depends_on:
      - redis_local
      - backend_local
    command: celery --app=config.celery worker  --loglevel=info
    volumes:
      - media:/app/media

  celery_beat:
    build:
      context: .
      dockerfile: docker/Dockerfile
    env_file: .env
    depends_on:
      - redis_local
      - backend_local
    command: celery --app=config.celery beat --loglevel=info
    volumes:
      - media:/app/media

volumes:
  pg-data:
  static:
  media: